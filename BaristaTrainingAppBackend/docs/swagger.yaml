basePath: /
definitions:
  handler.signInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.Employee:
    properties:
      email:
        type: string
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - lastname
    - name
    - password
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Barista Training Application
  version: "1.0"
paths:
  /api/answers:
    get:
      consumes:
      - application/json
      description: Answers list
      operationId: answers
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Answers
      tags:
      - api
  /api/courses:
    get:
      consumes:
      - application/json
      description: courses list
      operationId: courses
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Courses
      tags:
      - api
  /api/information:
    get:
      consumes:
      - application/json
      description: information list
      operationId: information
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Information
      tags:
      - api
  /api/lections:
    get:
      consumes:
      - application/json
      description: lections list
      operationId: lections
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Lections
      tags:
      - api
  /api/lessons:
    get:
      consumes:
      - application/json
      description: Lessons list
      operationId: lessons
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Lessons
      tags:
      - api
  /api/questions:
    get:
      consumes:
      - application/json
      description: questions list
      operationId: questions
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Questions
      tags:
      - api
  /api/tests:
    get:
      consumes:
      - application/json
      description: tests list
      operationId: tests
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Tests
      tags:
      - api
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: SignUp
      tags:
      - auth
swagger: "2.0"
